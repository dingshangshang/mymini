//格式化数字start
var filter = {
  toFix: function (value, number = 2) {
    value = value == null ? 0 : value;
    return value.toFixed(number) //此处2为保留两位小数
  }
}
//格式化数字end

//因为苹果手机不兼容-，所以使用的/
function formatDate(strDate, format = "yyyy/MM/dd hh:mm") {
  // 解决ios出现NaN问题
  console.log(strDate);
  //strDate.replace在此处会报错
  // var realDate = strDate ? getDate(strDate.replace(getRegExp('-', 'g'), '/')) : getDate();
  var realDate = strDate ? getDate(strDate) : getDate();
  var regYear = getRegExp("(y+)", "i");
  var date = [
    ["M+", realDate.getMonth() + 1],
    ["d+", realDate.getDate()],
    ["h+", realDate.getHours()],
    ["m+", realDate.getMinutes()],
    ["s+", realDate.getSeconds()],
    ["q+", Math.floor((realDate.getMonth() + 3) / 3)],
    ["S+", realDate.getMilliseconds()],
  ];
  var reg1 = regYear.exec(format);
  if (reg1) {
    format = format.replace(reg1[1], (realDate.getFullYear() + '').substring(4 - reg1[1].length));
  }
  for (var i = 0; i < date.length; i++) {
    var reg2 = getRegExp("(" + date[i][0] + ")").exec(format);
    if (reg2) {
      format = format.replace(reg2[1], reg2[1].length == 1 ? v : ("00" + date[i][1]).substring(("" + date[i][1]).length));
    }
  }
  return format;
}

var formarDateC = function (d) {
  const d = res.data[0].time
  const resDate = d.getFullYear() + '-' + this.p((d.getMonth() + 1)) + '-' + this.p(d.getDate())
  const resTime = this.p(d.getHours()) + ':' + this.p(d.getMinutes()) + ':' + this.p(d.getSeconds())
}

//将null置换为空字符串start
var nullToEmpty = function (val) {
  if (val == null || val == undefined || val == "null") {
    return "";
  }
  return val;
}

module.exports = {
  toFix: filter.toFix,
  formatDate: formatDate,
  nullToEmpty: nullToEmpty
}